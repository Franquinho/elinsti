const { createClient } = require('@supabase/supabase-js');

// Configuraci√≥n
const SUPABASE_URL = 'https://joebhvyfcftobrngcqor.supabase.co';
const SUPABASE_ANON_KEY = 'sb_publishable_SseWwWd7DpxeVfQVTCbfTg_KEzkN-qv';

const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);

async function verifySystemStatus() {
  console.log('üîç VERIFICACI√ìN COMPLETA DEL SISTEMA');
  console.log('====================================\n');

  const status = {
    connection: false,
    auth: false,
    tables: {},
    data: {},
    login: false
  };

  try {
    // 1. Verificar conexi√≥n
    console.log('1Ô∏è‚É£ Verificando conexi√≥n con Supabase...');
    const { data, error } = await supabase.from('usuarios').select('count').limit(1);
    
    if (error) {
      console.log('‚ùå Error de conexi√≥n:', error.message);
      return;
    }
    status.connection = true;
    console.log('‚úÖ Conexi√≥n con Supabase: FUNCIONA');

    // 2. Verificar autenticaci√≥n
    console.log('\n2Ô∏è‚É£ Verificando autenticaci√≥n...');
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'admin@elinsti.com',
      password: 'Admin123!'
    });

    if (authError) {
      console.log('‚ùå Error de autenticaci√≥n:', authError.message);
    } else {
      status.auth = true;
      status.login = true;
      console.log('‚úÖ Autenticaci√≥n: FUNCIONA');
      console.log('‚úÖ Login: FUNCIONA');
      console.log('   Usuario:', authData.user?.email);
      console.log('   ID:', authData.user?.id);
    }

    // 3. Verificar tablas
    console.log('\n3Ô∏è‚É£ Verificando estructura de base de datos...');
    const tables = ['usuarios', 'productos', 'eventos', 'comandas', 'comanda_items'];
    
    for (const table of tables) {
      try {
        const { data, error } = await supabase.from(table).select('count').limit(1);
        if (error) {
          console.log(`‚ùå Tabla ${table}: ${error.message}`);
          status.tables[table] = false;
        } else {
          console.log(`‚úÖ Tabla ${table}: OK`);
          status.tables[table] = true;
        }
      } catch (err) {
        console.log(`‚ùå Tabla ${table}: Error de conexi√≥n`);
        status.tables[table] = false;
      }
    }

    // 4. Verificar datos
    console.log('\n4Ô∏è‚É£ Verificando datos...');
    
    // Usuarios
    const { data: usuarios } = await supabase.from('usuarios').select('*');
    status.data.usuarios = usuarios?.length || 0;
    console.log(`‚úÖ Usuarios: ${status.data.usuarios} encontrados`);
    
    // Productos
    const { data: productos } = await supabase.from('productos').select('*');
    status.data.productos = productos?.length || 0;
    console.log(`‚úÖ Productos: ${status.data.productos} encontrados`);
    
    // Eventos
    const { data: eventos } = await supabase.from('eventos').select('*');
    status.data.eventos = eventos?.length || 0;
    console.log(`‚úÖ Eventos: ${status.data.eventos} encontrados`);

    // 5. Verificar eventos activos
    const { data: eventosActivos } = await supabase
      .from('eventos')
      .select('*')
      .eq('activo', true);
    
    console.log(`‚úÖ Eventos activos: ${eventosActivos?.length || 0} encontrados`);

    // 6. Verificar productos activos
    const { data: productosActivos } = await supabase
      .from('productos')
      .select('*')
      .eq('activo', true);
    
    console.log(`‚úÖ Productos activos: ${productosActivos?.length || 0} encontrados`);

    // 7. Resumen final
    console.log('\nüéØ RESUMEN DEL ESTADO DEL SISTEMA');
    console.log('==================================');
    console.log(`‚úÖ Conexi√≥n: ${status.connection ? 'FUNCIONA' : 'FALLA'}`);
    console.log(`‚úÖ Autenticaci√≥n: ${status.auth ? 'FUNCIONA' : 'FALLA'}`);
    console.log(`‚úÖ Login: ${status.login ? 'FUNCIONA' : 'FALLA'}`);
    
    const tablesWorking = Object.values(status.tables).filter(Boolean).length;
    const totalTables = Object.keys(status.tables).length;
    console.log(`‚úÖ Tablas: ${tablesWorking}/${totalTables} funcionando`);
    
    console.log(`‚úÖ Datos: ${status.data.usuarios} usuarios, ${status.data.productos} productos, ${status.data.eventos} eventos`);
    
    // 8. Estado general
    const allWorking = status.connection && status.auth && status.login && tablesWorking === totalTables;
    
    if (allWorking) {
      console.log('\nüéâ SISTEMA COMPLETAMENTE FUNCIONAL');
      console.log('==================================');
      console.log('‚úÖ Todos los componentes est√°n funcionando correctamente');
      console.log('‚úÖ El sistema est√° listo para usar en producci√≥n');
      console.log('\nüìã CREDENCIALES DE ACCESO:');
      console.log('Email: admin@elinsti.com');
      console.log('Contrase√±a: Admin123!');
      console.log('\nüåê URL del sistema: http://localhost:3000');
    } else {
      console.log('\n‚ö†Ô∏è SISTEMA CON PROBLEMAS');
      console.log('======================');
      console.log('‚ùå Algunos componentes no est√°n funcionando correctamente');
      console.log('üîß Revisa los errores anteriores para identificar problemas');
    }

  } catch (error) {
    console.error('‚ùå Error durante la verificaci√≥n:', error.message);
  }
}

verifySystemStatus(); 